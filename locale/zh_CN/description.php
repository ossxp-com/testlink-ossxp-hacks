<?php
/** -------------------------------------------------------------------------------------
 * TestLink Open Source Project - http://testlink.sourceforge.net/
 * 
 * Filename $RCSfile: description.php,v $
 * @version $Revision: 1.1 $
 * @modified $Date: 2009/02/02 22:30:53 $ $Author: havlat $
 * @author Martin Havlat
 *
 * Translation:
 *   * 2009/12/16, Lei Weiwei <leiww AT ossxp.com>
 *   * 2009/12/11, Wang Sheng <wangsheng AT ossxp.com>
 *
 * --------------------------------------------------------------------------------------
 *
 * LOCALIZATION:
 * === English (en_GB) strings === - default development localization (World-wide English)
 *
 * @ABSTRACT
 * The file contains global variables with html text. These variables are used as 
 * HELP or DESCRIPTION. To avoid override of other globals we are using "Test Link String" 
 * prefix '$TLS_hlp_' or '$TLS_txt_'. This must be a reserved prefix.
 * 
 * Contributors:
 * Add your localization to TestLink tracker as attachment to update the next release
 * for your language.
 *
 * No revision is stored for the the file - see CVS history
 * The initial data are based on help files stored in gui/help/<lang>/ directory. 
 * This directory is obsolete now. It serves as source for localization contributors only. 
 *
 * ----------------------------------------------------------------------------------- */

// printFilter.html //已校对
$TLS_hlp_generateDocOptions = "<h2>根据选项生成文档</h2>

<p>该列表用于筛选测试报告的内容。
测试报告只生成选中的内容。选择那些你想要打印的测试用例内容，点击测试套件目录树中某个测试
套件或者测试用例，那么你将看到该测试套件或者测试用例中经过过滤的内容。</p>

<p><b>文档头部：</b>用户可以筛选文档的头部信息。
文档的头部信息包括：介绍，范围，参考，测试方法和测试规范。</p>

<p><b>测试用例的内容：</b>用户可以过滤测试用例的内容。测试用例的内容包括：
摘要，步骤，预期结果和关键字。</p>

<p><b>测试用例摘要：</b>通过测试用例的标题，用户可以过滤测试用例摘要的信息。
但是，用户不能通过测试用例的内容过滤测试用例摘要信息。
为了在浏览标题时显示摘要信息和遗漏的步骤，预期结果和关键字，TestLink把测试摘要从测试用例内容中单独分离出来。
当用户浏览测试用例的时候，测试用例摘要将被自动包含进来供浏览。</p>

<p><b>内容列表：</b>如果选中，TestLink将显示所有标题的内部链接列表</p>

<p><b>导出格式：</b>共有两种格式：HTML和MS word。在第二种情况下，浏览器会自动调用MS word组件。</p>";

// testPlan.html //已校对
$TLS_hlp_testPlan = "<h2>测试计划</h2>

<h3>一般定义</h3>
<p>测试计划是测试软件系统的一个系统性的方法。你可以根据特定的产品周期和问题跟踪结果组织你的测试活动。</p>

<h3>测试执行</h3>
<p>在该部分用户可以执行测试用例（记录测试结果），并输出测试计划所包含的测试套件。
同时用户也可以跟踪测试用例执行的结果。</p>

<h2>测试计划的管理</h2>
<p>这部分，仅管理人员可以访问，管理测试计划。
管理测试计划涉及到创建、编辑和删除测试计划，添加、编辑、删除和更新测试计划所包含的测试用例，创建构建以及指派用户在项目中的权限。<br/>
权限高的用户可以设置测试套件（类别）的优先级／风险和拥有者(测试套件由谁负责)，以及创建测试里程碑。</p>

<p>注意：用户有可能看不到测试计划的下拉菜单。
在这种情况下，所有的链接（除了管理人员开启的）都不能使用。如果出现这种情况，你一定要跟负责人或管理员联系，给你在项目中授予适当的权限或者为你创建一个测试计划。</p>"; 

// custom_fields.html //已校对
$TLS_hlp_customFields = "<h2>自定义字段</h2>
<p>下面是关于自定义字段应用的一些实例：</p>
<ul>
<li>自定义字段可以用于整个测试过程。</li>
<li>自定义字段可关联到的元素类型有（测试套件，测试用例等）。</li>
<li>自定义字段可以关联到多个测试项目。</li>
<li>每个测试项目中自定义字段的显示顺序都不相同。</li>
<li>可以在指定的测试项目中禁用自定义字段。</li>
<li>自定义字段的数量不受限制。</li>
</ul>

<p>自定义字段的定义中包括以下属性：</p>
<ul>
<li>名称</li>
<li>标签</li>
<li>字段类型 (string, numeric, float, email, checkbox, list, multiselection list, date, radio, datetime, textarea, script, server)。对于checkbox, list, multiselection list和radio类型的字段，需要输入取值列表，多个值之间用('|')隔开。</li>
<li>启用阶段：测试执行，测试规约设计，测试计划设计。
<ul>
<li>测试执行：在测试用例执行时用户可以对其进行修改。</li>
<li>测试规约设计：当设计测试用例规约时，用户可以对其值进行修改。</li>
<li>测试计划设计：当设计测试计划(向测试计划中添加测试用例时),用户可以对其进行修改。</li>
</ul>
</li>
<li>是否在测试用例执行中显示</li>
<li>用于: 指定该自定义字段用于哪些测试活动中。<br/>可用的选项有：测试套件，测试计划，测试用例，需求说明书，需求</li>
</ul>
";

// execMain.html  //已校对
$TLS_hlp_executeMain = "<h2>执行测试用例</h2>
<p>允许用户执行测试用例。执行是一个给当前构建里的测试用例指定结果（通过，失败，阻塞）的过程</p>
<p>通过配置可以关联到缺陷跟踪系统，从而可以直接新建问题或者浏览已经存在的问题。更多请信息请查看相关手册。</p>";

//bug_add.html //已校对
$TLS_hlp_btsIntegration = "<h2>给测试用例添加问题</h2>
<p><i>(仅在已经配置好的情况下)</i>
TestLink 只是简单地跟缺陷跟踪系统（BTS）进行了集成，即不能向BTS发送新建bug的请求，也不能取回bug的id号。
该集成仅仅与BTS建立了一个页面连接，调用以下功能：
<ul>
	<li>添加新问题</li>
	<li>显示已存在问题的信息 </li>
</ul>
</p>  

<h3>添加问题的过程</h3>
<p>
   <ul>
   <li>第一步: 点击小虫图标，在新弹出页面上点击<strong>访问问题跟踪系统</strong>的链接，进入BTS系统，添加一个新问题</li>
   <li>第二步: 记下BTS指定的BUGID</li>
   <li>第三步: 将BUGID写入输入框中</li>
   <li>第四步: 点击添加问题按钮</li>
   </ul>  

关闭添加问题页面后，你将在执行页面上看见相关问题的标题链接，通过点击该链接，可进入BTS系统查看该问题的详细描述。
</p>";

// execFilter.html  //已校对
$TLS_hlp_executeFilter = "<h2>过滤器设置</h2>

<p>左边框的上方是测试用例过滤器，下方列出了指派给当前测试计划的所有测试用例。" .
"用户可以选择过滤条件，然后点击 \"应用\" 按钮，这时下方仅列出符合过滤条件的测试用例。 " .
"</p>

<h3>构建</h3>
<p>用户必须选择一个用来和测试结果建立关联的构建。" .
"构建是测试计划的基本组成部分。在每个构建中每一个测试用例都可能被执行多次。" .
"然而统计只记录最终的执行结果。 
<br />项目负责人可以在新建构建的页面创建构建。</p>

<h3>测试用例 ID 过滤器</h3>
<p>用户可以使用测试用例的 ID 进行筛选。该 ID 在创建测试用例的时候自动生成。 
此字段为空标识不使用该过滤条件。</p> 

<h3>优先级过滤器</h3>
<p>用户可以通过优先级来过滤测试用例。每个测试用例的重要性还与该测试用例在当前测试计划里的紧急程度有关。" .
"例如'HIGH'优先级的测试用例会显示那些重要性是HIGH，紧急程度至少是MEDIUM级别的测试用例。</p> 

<h2>结果过滤器</h2>
<p>用户可以通过测试结果过滤测试用例。测试结果是测试用例基于某一构建的产物。测试用例的状态包括通过，失败，阻塞或者尚未运行。" .
"该过滤条件默认情况下是禁用的。</p>

<h3>拥有者过滤器</h3>
<p>用户可以根据测试用例的拥有者来过滤测试用例。复选框中包含\"未指派\"选项。</p>";
/*
<h2>当前结果</h2>
<p>默认情况下或者没有选择复选框里的"most  current"选项时，树形目录将按照下拉选择框里选择的构建排序。
这时树形目录将显示测试用例的状态。<br />
例如：用户从下来选择框里选择构建2而且没有选择复选框里的"most current"。
所有测试用例会显示它们在构建2里的执行状态。 
因此，如果测试用例1在构建2里执行通过的情况下，它会显示为绿色。
<br />如果用户选择了复选框里的"most current"，那么树形目录里的测试用例将根据他们最新的执行结果显示相应的颜色。
<br />例如：如果用户选择了构建2而且选择了复选框里的"most current"，那么所有的测试用例将根据他们最近的状态显示。
因此，如果测试用例1在构建3里通过，即使用户选择了构建2，它也会显示为绿色。</p>
 */


// newest_tcversions.html //已校对
$TLS_hlp_planTcModified = "<h2>被关联测试用例的最新版本</h2>
<p>通过分析与测试计划关联的所有测试用例，那些有最新版本的测试用例将被罗列出来（相对应于当前测试计划的测试用例）
</p>";


// requirementsCoverage.html //已校对
$TLS_hlp_requirementsCoverage = "<h3>需求覆盖</h3>
<br />
<p>这个功能允许通过测试用例来映射对用户或系统需求的覆盖度。
通过主页的\"需求规约\" 导航可进入本页面。</p>

<h3>需求规约</h3>
<p>需求是根据测试项目中相关联的'需求规约'文档来组织的。<br />
TestLink 不支持即包含需求规约又包含需求的版本。
因此，只有创建好规约之后才能往里添加需求文档版本。 <br/>
<b>标题：</b>需求规约的简单描述<br/>
<b>范围：</b>需求规约的备注信息</p> 

<p><b><a name='total_count'>需求数目</a></b>在所有需求还没有完全添加（导入）到TestLink的情况下，用于评估需求覆盖度。 </p> 
<p><i>例如软件需求规约(SRS)中包含200个需求，但是仅有50个被添加到TestLink。这时测试覆盖度为25%。 
</i></p>

<h3><a name=\"req\">需求</a></h3>
<p>在左侧点击某一需求规约的标题，你就可以为该需求规约创建，编辑，删除和导入需求文档。每个需求都有标题，范围和状态。
状态包括 \"有效的\" 和 \"不可测试的\". 不可测试的需求不会被统计度量。
这个值被用于没有实现的功能和错误的设计需求。</p> 

<p>在左侧点击某一需求规约，点击右侧的<strong>创建测试用例</strong>按钮，系统将自动根据需求的描述为你创建对应的测试套件和测试用例。</p>
";


// planAddTC_m1.tpl //已校对
$TLS_hlp_planAddTC = "<h2>关于'保存自定义字段'</h2>
如果你已经定义而且指派了关键字到测试项目中，<br /> 
自定义字段具有：<br />
 '在测试计划设计里显示=true' 和 <br />
 '启用测试计划设计=true'<br />
你将只能在已经与测试计划建立关联的测试用例页面看到这些关键字。
";

// xxx.html
//$TLS_hlp_xxx = "";

// ----- END ------------------------------------------------------------------
?>
