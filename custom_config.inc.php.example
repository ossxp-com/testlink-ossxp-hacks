<?php
/**
 * TestLink Open Source Project - http://testlink.sourceforge.net/ 
 * This script is distributed under the GNU General Public License 2 or later. 
 *
 * Filename $RCSfile: custom_config.inc.php.example,v $
 *
 * @version $Revision: 1.1.2.1 $
 * @modified $Date: 2009/04/20 08:41:44 $ by $Author: havlat $
 *
 * SCOPE:
 * Constants and configuration parameters used throughout TestLink DEFINED BY USERS.
 *
 * Use this file to overwrite configuration parameters (variables and defines)
 * present in:
 *             config.inc.php
 *             cfg/const.inc.php
 *-----------------------------------------------------------------------------
*/

// *******************************************************************************
// *******************************************************************************
// Hint: After doing configuration changes, clean you Browser's cookies and cache 
//
// use contents of this file as an example of custom configuration
//
// *******************************************************************************
// *******************************************************************************
//
// If you create your OWN reports and add something like this:
//
// ------------------------------------------------------------
// $tlCfg->reports_list['tcases_with_rca'] = array( 
//	'title' => 'link_report_tcases_with_cf',
//	'url' => 'lib/results/testCasesWithCF.php',
//	'enabled' => 'all',
//	'format' => 'format_html'
// );
// -----------------------------------------------------------
// Your reports WILL BE ON TOP OF standard TL Reports on left frame
//
//

// TRUE  -> the whole execution history for the choosen build will be showed
// FALSE -> just last execution for the choosen build will be showed [STANDARD BEHAVIOUR]
//$tlCfg->exec_cfg->history_on = TRUE;

//$tlCfg->exec_cfg->show_testsuite_contents = ENABLED;

// TRUE  ->  test case VERY LAST (i.e. in any build) execution status will be displayed
// FALSE -> only last result on current build.  [STANDARD BEHAVIOUR]
//$tlCfg->exec_cfg->show_last_exec_any_build = TRUE;

// TRUE  ->  History for all builds will be shown
// FALSE ->  Only history of the current build will be shown  [STANDARD BEHAVIOUR]
//$tlCfg->exec_cfg->show_history_all_builds = TRUE;

// $tlCfg->gui->custom_fields->types = array(100 => 'radio head');
// $tlCfg->gui->custom_fields->possible_values_cfg = array('radio head' => 1);

//$g_log_level='DEBUG';

// $tlCfg->results['status_code'] = array ( 
//         "failed"        => 'f', 
//         "blocked"       => 'b', 
//         "passed"        => 'p', 
//         "not_run"       => 'n', 
//         "not_available" => 'x', 
//         "unknown"       => 'u', 
//         "all"           => 'a' 
// ); 
// 
// $tlCfg->results['status_label'] = array( 
//         "passed"                => "test_status_passed", 
//         "failed"                => "test_status_failed", 
//         "blocked"               => "test_status_blocked", 
//         "not_run"               => "test_status_not_run", 
// //    "all"                   => "test_status_all_status", 
//         "not_available"    => "test_status_not_available", 
// //      "unknown"          => "test_status_unknown" 
// ); 
// 
// $tlCfg->results['status_label_for_exec_ui'] = array( 
//         "passed"  => "test_status_passed", 
//         "failed"  => "test_status_failed", 
//         "blocked" => "test_status_blocked", 
//         "not_run" => "test_status_not_run",
//         "not_available" => "test_status_not_available" 
// ); 
// 
// $tlCfg->results['default_status'] = "not_run"; 

// ----------------------------------------------------------------------------
/** [User Authentication] */                 

/** 
 * Login authentication method:
 * 		'MD5' => use password stored on db
 * 		'LDAP' => use password from LDAP Server
 * 		'COSIGN' => Cosign Single Sign-on v2 (with the ldap backends)
 * 		'COSIGN3' => Cosign Single Sign-on v3 (with the ldap backends)
 */ 
/** Before enable COSIGN login, add your self as administrator */
//$tlCfg->authentication['method'] = 'MD5';  # Default
//$tlCfg->authentication['method'] = 'LDAP';
//$tlCfg->authentication['method'] = 'COSIGN3';
$tlCfg->authentication['login_url'] = 'https://weblogin.foo.bar/cgi-bin/login';
$tlCfg->authentication['logout_url'] = 'https://weblogin.foo.bar/cgi-bin/logout';

/** LDAP authentication credentials */
$tlCfg->authentication['ldap_server']		= 'localhost';
$tlCfg->authentication['ldap_port']			= '389';
$tlCfg->authentication['ldap_version']		= '3'; // could be '2' in some cases
$tlCfg->authentication['ldap_root_dn']		= 'dc=foo,dc=bar';
$tlCfg->authentication['ldap_organization']	= '';    // e.g. '(authorizedService=testlink)'
$tlCfg->authentication['ldap_uid_field']	= 'uid'; // Use 'sAMAccountName' for Active Directory
$tlCfg->authentication['ldap_firstname_field']	= 'givenName';
$tlCfg->authentication['ldap_lastname_field']	= 'sn';
$tlCfg->authentication['ldap_fullname_field']	= 'cn';
$tlCfg->authentication['ldap_email_field']	    = 'mail';
$tlCfg->authentication['ldap_bind_dn']		= ''; // Left empty for anonymous LDAP binding 
$tlCfg->authentication['ldap_bind_passwd']	= ''; // Left empty for anonymous LDAP binding 

/** Enable/disable Users to create accounts on login page */
// $tlCfg->user_self_signup = FALSE; 

// ----------------------------------------------------------------------------
/** [SMTP] */

// SMTP server Configuration ("localhost" is enough in the most cases)
$g_smtp_host        = 'localhost';  # SMTP server MUST BE configured  

# Configure using custom_config.inc.php
$g_tl_admin_email     = 'webmaster@foo.bar'; # for problem/error notification 
$g_from_email         = 'testlink@foo.bar';  # email sender
$g_return_path_email  = 'noreply@foo.bar';

# Urgent = 1, Not Urgent = 5, Disable = 0
// $g_mail_priority = 5;   

// Configure only if SMTP server requires authentication
$g_smtp_username    = '';  # user  
$g_smtp_password    = '';  # password 

// ----------------------------------------------------------------------------
/** [Bug Tracking systems] */
//$g_interface_bugs = 'REDMINE';

/** Company logo (used by navigation bar and login page page) */
//$tlCfg->company_logo = '<img alt="TestLink" title="TestLink" style="width: 115px; height: 53px;" src="' . 
//                          $tlCfg->theme_dir . 'images/company_logo.png" />';
//$tlCfg->company_logo = 'company_logo.png';

// ----------------------------------------------------------------------------
/** [LOCALIZATION] */
$tlCfg->default_language = 'zh_CN'; 

// Set Chinese font for pchart.
foreach (array("simsun.ttc", "SIMLI.TTF", "simhei.ttf", "STSONG.TTF") as $font)
{
    if (file_exists(TL_ABS_PATH . "third_party/pchart/Fonts/$font"))
    {
        $tlCfg->charts_font_path = TL_ABS_PATH . "third_party/pchart/Fonts/$font";
        break;
    }
}

/** 
 *  How to warning user when security weak points exists.
 *
 * 'SCREEN': messages will displayed on login screen, and tl desktop (default)
 * 'FILE': a file with a list is created but users are not notified via GUI
 *         user will receive a message on screen.
 * 'SILENT': same that FILE, but user will not receive message on screen.
 */
//$tlCfg->config_check_warning_mode = "SILENT";

?>
