From: Jiang Xin <worldhello.net@gmail.com>
Subject: [PATCH] t/single_signon

TestLink 单点登录支持

Signed-off-by: Jiang Xin <worldhello.net@gmail.com>

---
 config.inc.php                 |    8 ++++
 index.php                      |   12 ++++++-
 lib/functions/doAuthorize.php  |   36 ++++++++++++++++++--
 lib/functions/ldap_api.php     |   46 ++++++++++++++++++++++++++
 lib/functions/tlUser.class.php |   27 ++++++++++++++-
 login.php                      |   71 +++++++++++++++++++++++++++++++++++++---
 logout.php                     |   17 +++++++++
 7 files changed, 205 insertions(+), 12 deletions(-)

diff --git a/config.inc.php b/config.inc.php
index d93cc11..2bd6c7a 100644
--- a/config.inc.php
+++ b/config.inc.php
@@ -318,8 +318,12 @@ $g_smtp_password    = '';  # password
  * Login authentication method:
  * 	'MD5' => use password stored on db
  *	'LDAP' => use password from LDAP Server
+ *	'COSIGN' => Cosign Single Sign-on V2 (with the ldap backends)
+ *	'COSIGN3' => Cosign Single Sign-on V3 (with the ldap backends)
  */
 $tlCfg->authentication['method'] = 'MD5';
+$tlCfg->authentication['login_url'] = 'https://weblogin.foo.bar/cgi-bin/login';
+$tlCfg->authentication['logout_url'] = 'https://weblogin.foo.bar/cgi-bin/logout';
 
 /** LDAP authentication credentials */
 $tlCfg->authentication['ldap_server'] = 'localhost';
@@ -328,6 +332,10 @@ $tlCfg->authentication['ldap_version'] = '3'; // could be '2' in some cases
 $tlCfg->authentication['ldap_root_dn'] = 'dc=mycompany,dc=com';
 $tlCfg->authentication['ldap_organization']	= '';    // e.g. '(organizationname=*Traffic)'
 $tlCfg->authentication['ldap_uid_field'] = 'uid'; // Use 'sAMAccountName' for Active Directory
+$tlCfg->authentication['ldap_firstname_field']	= 'givenName';
+$tlCfg->authentication['ldap_lastname_field']	= 'sn';
+$tlCfg->authentication['ldap_fullname_field']	= 'cn';
+$tlCfg->authentication['ldap_email_field']	    = 'mail';
 $tlCfg->authentication['ldap_bind_dn'] = ''; // Left empty for anonymous LDAP binding
 $tlCfg->authentication['ldap_bind_passwd'] = ''; // Left empty for anonymous LDAP binding
 $tlCfg->authentication['ldap_tls'] = false; // true -> use tls
diff --git a/index.php b/index.php
index 9590480..7e634a3 100644
--- a/index.php
+++ b/index.php
@@ -25,7 +25,17 @@ $args = init_args();
 //verify the session during a work
 if (!isset($_SESSION['currentUser']))
 {
-	redirect(TL_BASE_HREF ."login.php?note=expired");
+	// cosign v2 or cosign v3
+	if (strtolower($tlCfg->authentication['method']) == 'cosign' ||
+	    strtolower($tlCfg->authentication['method']) == 'cosign3')
+	{
+		// If redirect to ?note=expired, account a deadly loop in some instance.
+		redirect(TL_BASE_HREF ."login.php");
+	}
+	else
+	{
+		redirect(TL_BASE_HREF ."login.php?note=expired");
+	}
 	exit;
 }
 $smarty = new TLSmarty();
diff --git a/lib/functions/doAuthorize.php b/lib/functions/doAuthorize.php
index a555c6b..5112ed8 100644
--- a/lib/functions/doAuthorize.php
+++ b/lib/functions/doAuthorize.php
@@ -22,29 +22,57 @@
 /** TBD */ 
 require_once("users.inc.php");
 require_once("roles.inc.php");
+require_once('config.inc.php');
+require_once('common.php');
 
 /** 
  * authorization function verifies login & password and set user session data 
  * return map
  *
  */
-function doAuthorize(&$db,$login,$pwd)
+function doAuthorize(&$db,$login,$pwd,$sso=0)
 {
 	$result = array('status' => tl::ERROR, 'msg' => null);
 	$_SESSION['locale'] = TL_DEFAULT_LOCALE; 
-	if (!is_null($pwd) && !is_null($login))
+
+	if (!is_null($pwd) && !is_null($login) || $sso && !is_null($login))
 	{
 		$user = new tlUser();
 		$user->login = $login;
 		$login_exists = ($user->readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) >= tl::OK); 
+		if ($sso)
+		{
+			$user->updateFromLDAP(true);
+			if (!$login_exists || $user->ldap_update)
+			{
+				if (!$login_exists)
+				{
+					$user->globalRoleID = config_get('default_roleid');
+					$user->locale = config_get('default_language');
+					$user->bActive = 1;
+					$login_exists = 1;
+				}
+				$user->writeToDB($db);
+				$user->ldap_update = false;
+			}
+		}
 		if ($login_exists)
 		{
-			$password_check = auth_does_password_match($user,$pwd);
+			if ($sso)
+			{
+				$password_check = new stdClass();
+				$password_check->status_ok = true;
+				$password_check->msg = 'ok';
+			}
+			else
+			{
+				$password_check = auth_does_password_match($user,$pwd);
+			}
 			if ($password_check->status_ok && $user->isActive)
 			{
 				// 20051007 MHT Solved  0000024 Session confusion 
 				// Disallow two sessions within one browser
-				if (isset($_SESSION['currentUser']) && !is_null($_SESSION['currentUser']))
+				if (isset($_SESSION['currentUser']) && !is_null($_SESSION['currentUser']) && !$sso)
 				{
 					$result['msg'] = lang_get('login_msg_session_exists1') . 
 					                 ' <a style="color:white;" href="logout.php">' . 
diff --git a/lib/functions/ldap_api.php b/lib/functions/ldap_api.php
index a653f3b..7a4a75d 100644
--- a/lib/functions/ldap_api.php
+++ b/lib/functions/ldap_api.php
@@ -140,4 +140,50 @@
     	return $t_authenticated;
 	}
 
+// ----------------------------------------------------------------------------
+	// Read user attributes from the LDAP directory
+	function ldap_fetch_account( $login_name ) 
+	{
+		$account = array();
+
+		$authCfg 			= config_get('authentication');
+		$t_ldap_organization = $authCfg['ldap_organization'];
+		$t_ldap_root_dn		= $authCfg['ldap_root_dn'];
+		$t_ldap_uid_field	= strtolower( $authCfg['ldap_uid_field'] );	// 'uid' by default
+		$t_ldap_firstname_field = strtolower( $authCfg['ldap_firstname_field'] );	// 'givenName' by default
+		$t_ldap_lastname_field  = strtolower( $authCfg['ldap_lastname_field'] );	// 'sn' by default
+		$t_ldap_fullname_field  = strtolower( $authCfg['ldap_fullname_field'] );	// 'cn' by default
+		$t_ldap_email_field     = strtolower( $authCfg['ldap_email_field'] );	// 'mail' by default
+
+		$t_username      	= $login_name;
+		$t_search_filter 	= "(&$t_ldap_organization($t_ldap_uid_field=$t_username))";
+		$t_search_attrs  	= array( 'dn',
+									$t_ldap_firstname_field,
+									$t_ldap_lastname_field,
+									$t_ldap_fullname_field,
+									$t_ldap_email_field );
+		$t_connect          = ldap_connect_bind();
+
+		if( !is_null($t_connect->handler) )
+		{
+			$t_ds = $t_connect->handler;
+
+			# Search for the user id
+			$t_sr = ldap_search( $t_ds, $t_ldap_root_dn, $t_search_filter, $t_search_attrs );
+			$t_info = ldap_get_entries( $t_ds, $t_sr );
+
+			if ( $t_info ) {
+				# Try to authenticate to each until we get a match
+				$account['firstName'] = in_array($t_ldap_firstname_field, $t_info[0]) ? $t_info[0][$t_ldap_firstname_field][0] : '';
+				$account['lastName'] = in_array($t_ldap_lastname_field, $t_info[0]) ? $t_info[0][$t_ldap_lastname_field][0] : '';
+				$account['emailAddress'] = in_array($t_ldap_email_field, $t_info[0]) ? $t_info[0][$t_ldap_email_field][0] : '';
+			}
+
+			ldap_free_result( $t_sr );
+			ldap_unbind( $t_ds );
+		}
+
+		return $account;
+	}
+
 ?>
diff --git a/lib/functions/tlUser.class.php b/lib/functions/tlUser.class.php
index 800496e..1613755 100644
--- a/lib/functions/tlUser.class.php
+++ b/lib/functions/tlUser.class.php
@@ -29,6 +29,9 @@
  * @uses 	config.inc.php
  * @since 	1.7
  */ 
+
+require_once("ldap_api.php");
+
 class tlUser extends tlDBObject
 {
 	/**
@@ -97,6 +100,8 @@ class tlUser extends tlDBObject
 	 */
 	public $userApiKey;
 
+	public $ldap_update;
+
 	/**
 	 * @var string the password of the user
 	 * @access protected
@@ -155,6 +160,7 @@ class tlUser extends tlDBObject
 		$this->isActive = 1;
 		$this->tprojectRoles = null;
 		$this->tplanRoles = null;
+		$this->ldap_update = false;
 	}
 	
 	/** 
@@ -228,7 +234,24 @@ class tlUser extends tlDBObject
 	function create()
 	{
 	}
-	
+
+	public function updateFromLDAP($change=true)
+	{
+		$account = ldap_fetch_account( $this->login );
+		foreach(array("firstName", "lastName", "emailAddress") as $attr)
+		{
+			if ( $this->$attr != $account[$attr] )
+			{
+				$this->ldap_update = true;
+				if ($change)
+					$this->$attr = $account[$attr];
+				else
+					break;
+			}
+		}
+		return $account;
+	}
+
 	//----- BEGIN interface iDBSerialization -----
 	/** 
 	 * Reads an user object identified by its database id from the given database
@@ -965,4 +988,4 @@ class tlUser extends tlDBObject
 	}	
 
 }
-?>
\ No newline at end of file
+?>
diff --git a/login.php b/login.php
index cd0877b..b8879cb 100644
--- a/login.php
+++ b/login.php
@@ -41,14 +41,27 @@ if (!$op['status'])
 $args = init_args();
 $gui = init_gui($db,$args);
 
-switch($args->action) 
+$cosign_loggedin = 0;
+// cosign v2 or cosign v3
+if (strtolower($tlCfg->authentication['method']) == 'cosign' ||
+    strtolower($tlCfg->authentication['method']) == 'cosign3')
+{
+	if (@$_SERVER["REMOTE_USER"] || @$_SERVER["REDIRECT_REMOTE_USER"])
+	{
+		$args->login = @$_SERVER["REMOTE_USER"] ? @$_SERVER["REMOTE_USER"] : @$_SERVER["REDIRECT_REMOTE_USER"];
+		$cosign_loggedin = 1;
+	}
+}
+
+$login_switch = $cosign_loggedin ? 'doLogin' : $args->action;
+switch($login_switch) 
 {
 	case 'doLogin':
 	case 'ajaxlogin':
 		 doSessionStart();
 		 unset($_SESSION['basehref']);
 		 setPaths();
-		 $op = doAuthorize($db,$args->login,$args->pwd);
+		 $op = doAuthorize($db,$args->login,$args->pwd,$cosign_loggedin);
 		 
 		 if( $op['status'] < tl::OK)
 		 {
@@ -93,6 +106,22 @@ switch($args->action)
 		 break;
 }
 
+// cosign v2
+if (strtolower($tlCfg->authentication['method']) == 'cosign')
+{
+	// Redirect to cosign login page.
+	sso_redirect(2);
+}
+// cosign v3
+elseif (strtolower($tlCfg->authentication['method']) == 'cosign3')
+{
+	// Redirect to cosign login page.
+	sso_redirect(3);
+}
+
+$logPeriodToDelete = config_get('removeEventsOlderThan');
+$g_tlLogger->deleteEventsFor(null, strtotime("-{$logPeriodToDelete} days UTC"));
+
 // BUGID 0003129
 if( $doRender )
 {
@@ -104,11 +133,43 @@ if( $doRender )
 	$smarty->display($templateCfg->default_template);
 }
 
+/**
+ * Single Sign-on redirect
+ */
+function sso_redirect($protocol=2)
+{
+	global $tlCfg;
 
+	$cosign_login_url    = $tlCfg->authentication['login_url'] ?
+												 $tlCfg->authentication['login_url'] :
+												 "https://weblogin.foo.bar/cgi-bin/login";
+	$cosign_service_name = $tlCfg->authentication['sso_service_name'] ?
+												 $tlCfg->authentication['sso_service_name'] :
+												 "testlink";
+	$cookie_name = "cosign-" . $cosign_service_name;
+	$service_url  = "http://".$_SERVER["HTTP_HOST"].$_SERVER["REQUEST_URI"];
+	if ($protocol == 3)
+	{
+		$dest_url = $cosign_login_url . "?" . $cookie_name . "&" .  $service_url;
+	}
+	else
+	{
+		$sample_string =
+		"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
+		$cookie_data = '';
+		for ($i=0;$i<125;$i++) {
+						$cookie_data .= $sample_string[mt_rand(0,61)];
+		}
+		setcookie( $cookie_name, $cookie_data );
+		$dest_url = $cosign_login_url . "?" . $cookie_name . "=" . $cookie_data . ";&" .  $service_url;
+	}
+	header( "Location: $dest_url" );
+	exit;
+}
 
 /**
- * 
- *
+ * Initialize input parameters
  */
 function init_args()
 {
@@ -149,7 +210,7 @@ function init_gui(&$db,$args)
 	
 	$authCfg = config_get('authentication');
 	$gui->securityNotes = getSecurityNotes($db);
-	$gui->external_password_mgmt = ('LDAP' == $authCfg['method']) ? 1 : 0;
+	$gui->external_password_mgmt = strtolower($authCfg['method']) != 'md5' ? 1 : 0;
 	$gui->login_disabled = ($gui->external_password_mgmt && !checkForLDAPExtension()) ? 1 : 0;
 	$gui->user_self_signup = config_get('user_self_signup');
 
diff --git a/logout.php b/logout.php
index 4c38572..941d4c6 100644
--- a/logout.php
+++ b/logout.php
@@ -19,6 +19,23 @@ if ($args->userID)
 session_unset();
 session_destroy();
 
+// cosign v2 or v3
+if (strtolower($tlCfg->authentication['method']) == "cosign" ||
+    strtolower($tlCfg->authentication['method']) == "cosign3")
+{
+	$authCfg = config_get('authentication');
+	$logout_url = $authCfg['logout_url'];
+
+	if (@$_SERVER['COSIGN_SERVICE'] || @$_SERVER['REDIRECT_COSIGN_SERVICE'])
+	{
+		$cookie_name = @$_SERVER["COSIGN_SERVICE"] ? @$_SERVER["COSIGN_SERVICE"] : @$_SERVER["REDIRECT_COSIGN_SERVICE"];
+		setcookie( $cookie_name, "null", time()-1, '/', "", 0 );
+		setcookie( $cookie_name, "null", time()-1 );
+	}
+	redirect($logout_url);
+	exit();
+}
+
 redirect("login.php");
 exit();
 
-- 
tg: (0b58b33..) t/single_signon (depends on: t/typos_no_last_eol)
