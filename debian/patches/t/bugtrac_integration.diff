From: Jiang Xin <worldhello.net@gmail.com>
Subject: [PATCH] t/bugtrac_integration

<patch description>

Signed-off-by: Jiang Xin <worldhello.net@gmail.com>

---
 cfg/redmine.cfg.php                             |   14 ++---
 config.inc.php                                  |    1 +
 gui/templates/project/projectEdit.tpl           |   12 ++++-
 gui/templates/project/projectView.tpl           |   12 ++++-
 install/sql/mssql/testlink_create_tables.sql    |    1 +
 install/sql/mysql/testlink_create_tables.sql    |    1 +
 install/sql/postgres/testlink_create_tables.sql |    1 +
 lib/bugtracking/int_bugtracking.php             |   60 ++++++++++++++++++++++-
 lib/execute/bugAdd.php                          |    6 ++-
 lib/functions/testproject.class.php             |   18 +++++--
 lib/project/projectEdit.php                     |   23 +++++++--
 lib/project/projectView.php                     |    9 +++-
 12 files changed, 134 insertions(+), 24 deletions(-)

diff --git a/cfg/redmine.cfg.php b/cfg/redmine.cfg.php
index a87ea2f..3dbdd21 100755
--- a/cfg/redmine.cfg.php
+++ b/cfg/redmine.cfg.php
@@ -13,10 +13,10 @@
  */
 // Set the bug tracking system Interface to redMine 0.6.3
 
-/** The DB host to use when connecting to the mantis db */
+/** The DB host to use when connecting to the redmine db */
 define('BUG_TRACK_DB_HOST', '[CONFIGURE_BUG_TRACK_DB_HOST]');
 
-/** The name of the database that contains the mantis tables */
+/** The name of the database that contains the redmine tables */
 define('BUG_TRACK_DB_NAME', '[CONFIGURE_BUG_TRACK_DB_NAME]');
 
 /** The DB type being used by redMine
@@ -44,16 +44,14 @@ define('BUG_TRACK_DB_PASS', '[CONFIGURE_BUG_TRACK_DB_USER_PASS]');
  *     password: xxxxxxxx
  * ----------------------
  */
-define('BUG_TRACK_DB_CHARSET', "latain1");
+// define('BUG_TRACK_DB_CHARSET', "latain1");
 // define('BUG_TRACK_DB_CHARSET',"gb2312");
-// define('BUG_TRACK_DB_CHARSET',"UTF-8");
+define('BUG_TRACK_DB_CHARSET',"UTF-8");
 
 
 /* link of the web server for redmine */
 define('BUG_TRACK_HREF', "http://localhost/redmine/issues/show/");
-// define('BUG_TRACK_HREF', "http://localhost:3000/issues/show/");
 
 /** link to the bugtracking system, for entering new bugs */
-define('BUG_TRACK_ENTER_BUG_HREF',"http://localhost/redmine/");
-// define('BUG_TRACK_ENTER_BUG_HREF',"http://localhost:3000/");
-?>
\ No newline at end of file
+define('BUG_TRACK_ENTER_BUG_HREF',"http://localhost/redmine/projects/%s/issues/new");
+?>
diff --git a/config.inc.php b/config.inc.php
index 59015fd..a6989c0 100644
--- a/config.inc.php
+++ b/config.inc.php
@@ -270,6 +270,7 @@ $g_removeEventsOlderThan = 30;
  * 'TRACKPLUS' : edit configuration in TL_ABS_PATH/cfg/trackplus.cfg.php
  * 'EVENTUM'   : edit configuration in TL_ABS_PATH/cfg/eventum.cfg.php
  * 'SEAPINE'   : edit configuration in TL_ABS_PATH/cfg/seapine.cfg.php
+ * 'REDMINE'   : edit configuration in TL_ABS_PATH/cfg/redmine.cfg.php
  * 'GFORGE'    : edit configuration in TL_ABS_PATH/cfg/gforge.cfg.php
  * 'FOGBUGZ'   : edit configuration in TL_ABS_PATH/cfg/fogbugz.cfg.php
  * ]
diff --git a/gui/templates/project/projectEdit.tpl b/gui/templates/project/projectEdit.tpl
index 093e45b..204aa42 100644
--- a/gui/templates/project/projectEdit.tpl
+++ b/gui/templates/project/projectEdit.tpl
@@ -33,7 +33,7 @@
 	title_testproject_management,testproject_enable_priority, testproject_enable_automation,
     public,testproject_color,testproject_alt_color,testproject_enable_requirements,
     testproject_enable_inventory,testproject_features,testproject_description,
-    testproject_prefix,availability,mandatory'}
+    testproject_prefix,availability,mandatory,bts_project_id'}
 
 {include file="inc_head.tpl" openHead="yes" jsValidate="yes" editorType=$editorType}
 {include file="inc_del_onclick.tpl"}
@@ -121,6 +121,16 @@
 				  	{include file="error_icon.tpl" field="tcasePrefix"}
 				</td>
 			</tr>
+			{if $bts_project_name_wanted}
+			<tr>
+				<th style="background:none;">{$labels.bts_project_id}</th>
+				<td><input type="text" name="btsProjectId"
+  			           size="{#BTS_PROJECT_ID_SIZE#}"
+	  		           maxlength="{#BTS_PROJECT_ID_MAXLEN#}"
+				           value="{$btsProjectId|escape}"/>
+				</td>
+			</tr>
+			{/if}
 			<tr>
 				<td>{$labels.testproject_description}</td>
 				<td style="width:80%">{$notes}</td>
diff --git a/gui/templates/project/projectView.tpl b/gui/templates/project/projectView.tpl
index 0bbfcd3..90c675c 100644
--- a/gui/templates/project/projectView.tpl
+++ b/gui/templates/project/projectView.tpl
@@ -28,7 +28,7 @@ Rev :
 		s='title_testproject_management,testproject_txt_empty_list,tcase_id_prefix,
 		th_name,th_notes,testproject_alt_edit,testproject_alt_active,
 		th_requirement_feature,testproject_alt_delete,btn_create,public,
-		testproject_alt_requirement_feature,th_active,th_delete,th_id'}
+		testproject_alt_requirement_feature,th_active,th_delete,th_id,bts_project_id'}
 
 
 {include file="inc_head.tpl" openHead="yes" enableTableSorting="yes"}
@@ -62,6 +62,9 @@ var del_action=fRoot+'{$deleteAction}';
 			<th>{$toggle_api_info_img}{$sortHintIcon}{$labels.th_name}</th>
 			<th class="{$noSortableColumnClass}">{$labels.th_notes}</th>
 			<th>{$sortHintIcon}{$labels.tcase_id_prefix}</th>
+			{if $bts_project_name_wanted}
+			<th>{$labels.bts_project_id}</th>
+			{/if}
 			<th class="{$noSortableColumnClass}">{$labels.th_requirement_feature}</th>
 			<th class="icon_cell">{$labels.th_active}</th>
 {* havlatm: the feature is not ready for using - must be disabled (developed by Francisco)
@@ -89,6 +92,11 @@ var del_action=fRoot+'{$deleteAction}';
 			<td width="10%">
 				{$testproject.prefix|escape}
 			</td>
+			{if $bts_project_name_wanted}
+			<td width="10%">
+				{$testproject.bts_project_id|escape}
+			</td>
+			{/if}
 			<td class="clickable_icon">
 				{if $testproject.opt->requirementsEnabled}
   					<img style="border:none"
@@ -156,4 +164,4 @@ var del_action=fRoot+'{$deleteAction}';
 {/if}
 
 </body>
-</html>
\ No newline at end of file
+</html>
diff --git a/install/sql/mssql/testlink_create_tables.sql b/install/sql/mssql/testlink_create_tables.sql
index 1178826..4f28ecf 100644
--- a/install/sql/mssql/testlink_create_tables.sql
+++ b/install/sql/mssql/testlink_create_tables.sql
@@ -542,6 +542,7 @@ CREATE TABLE /*prefix*/testprojects (
   [option_automation] [tinyint] NOT NULL CONSTRAINT [/*prefix*/DF_testprojects_option_automation]  DEFAULT ((0)),
 	[prefix] [varchar](16) NOT NULL,
   [tc_counter] [int] NOT NULL CONSTRAINT [/*prefix*/DF_testprojects_tc_counter]  DEFAULT ((0)),
+	[bts_project_id] [varchar](100) NOT NULL,
   CONSTRAINT [/*prefix*/PK_testprojects] PRIMARY KEY CLUSTERED 
   (
 	 [id] ASC
diff --git a/install/sql/mysql/testlink_create_tables.sql b/install/sql/mysql/testlink_create_tables.sql
index 3d5430f..ec66b3d 100644
--- a/install/sql/mysql/testlink_create_tables.sql
+++ b/install/sql/mysql/testlink_create_tables.sql
@@ -534,6 +534,7 @@ CREATE TABLE /*prefix*/testprojects (
   `options` text,
   `prefix` varchar(16) NOT NULL,
   `tc_counter` int(10) unsigned NOT NULL default '0',
+  `bts_project_id` varchar(100) NOT NULL default '',
   `is_public` tinyint(1) NOT NULL default '1',
   PRIMARY KEY  (`id`),
   KEY /*prefix*/testprojects_id_active (`id`,`active`),
diff --git a/install/sql/postgres/testlink_create_tables.sql b/install/sql/postgres/testlink_create_tables.sql
index f91a30d..4029138 100644
--- a/install/sql/postgres/testlink_create_tables.sql
+++ b/install/sql/postgres/testlink_create_tables.sql
@@ -316,6 +316,7 @@ CREATE TABLE /*prefix*/testprojects(
   "options" TEXT,
   "prefix" varchar(16) NOT NULL,
   "tc_counter" int NOT NULL default '0',
+  "bts_project_id" varchar(100) NOT NULL DEFAULT '',
   "is_public" INT2 NOT NULL DEFAULT '1',
   PRIMARY KEY ("id")
 ); 
diff --git a/lib/bugtracking/int_bugtracking.php b/lib/bugtracking/int_bugtracking.php
index d528c19..a94d41e 100644
--- a/lib/bugtracking/int_bugtracking.php
+++ b/lib/bugtracking/int_bugtracking.php
@@ -63,6 +63,9 @@ class bugtrackingInterface
 	var $dbConnection = null;
 	var $Connected = false;
 
+	//bts hosts multiple projects
+	var $bts_project_id = "";
+
 	/*
 	*
 	* FUNCTIONS NOT CALLED BY TestLink (helpers):
@@ -176,6 +179,49 @@ class bugtrackingInterface
 	}
 
 	/**
+	 * return true if the BTS has multiple project support.
+	 */
+	function project_name_wanted()
+	{
+		return strstr($this->enterBugURL, "%s")? true : false;
+	}
+
+	/**
+	 * Init bts_project_id from execute_id.
+	 *
+	 * @param class db    the databae instance
+	 * @param int exec_id the execute id
+	 * 
+	 * @return string returns bts_project_id
+	 *
+	 * @author Jiang Xin
+	 * @since 2009/12/20, 18:12:16 CST
+	 **/
+	function init_pid_from_execute($db, $exec_id)
+	{
+		//search bts_project_id if needed.
+		if ($this->project_name_wanted())
+		{
+			if(!is_null($exec_id) && strlen($exec_id))
+			{
+				$sql = "SELECT testprojects.bts_project_id ".
+							 "FROM testprojects ".
+							 "JOIN testplans ON testprojects.id=testplans.testproject_id ".
+							 "JOIN executions ON testplans.id=executions.testplan_id ".
+							 "WHERE executions.id = {$exec_id}";
+			}
+			$result = $db->exec_query($sql);
+			if ($result)
+			{
+				$myrow = $db->fetch_array($result);
+				if ($myrow)
+					$this->bts_project_id = $myrow['bts_project_id'];
+			}
+		}
+		return $this->bts_project_id;
+	}
+
+	/**
 	 * overload this to return the URL to the bugtracking page for viewing
 	 * the bug with the given id. This function is not directly called by
 	 * TestLink at the moment
@@ -263,7 +309,10 @@ class bugtrackingInterface
 	 **/
 	function getEnterBugURL()
 	{
-		return $this->enterBugURL;
+		if ($this->bts_project_id)
+			return sprintf($this->enterBugURL, $this->bts_project_id);
+		else
+			return $this->enterBugURL;
 	}
 
 	/**
@@ -364,7 +413,14 @@ if (isset($bts[$bts_type]))
 	$configPHP = $btsname . '.cfg.php';
 	$interfacePHP = 'int_' . $btsname . '.php';
 
-	require_once(TL_ABS_PATH . 'cfg/'. $configPHP);
+	if (file_exists(TL_ABS_PATH . 'cfg/custom_'. $configPHP))
+	{
+		require_once(TL_ABS_PATH . 'cfg/custom_'. $configPHP);
+	}
+	else
+	{
+		require_once(TL_ABS_PATH . 'cfg/'. $configPHP);
+	}
 	require_once(TL_ABS_PATH . 'lib/bugtracking/'. $interfacePHP);
 
 	$g_bugInterfaceName = BUG_INTERFACE_CLASSNAME;
diff --git a/lib/execute/bugAdd.php b/lib/execute/bugAdd.php
index 71dea2c..b43b0bf 100644
--- a/lib/execute/bugAdd.php
+++ b/lib/execute/bugAdd.php
@@ -45,6 +45,10 @@ if($args->bug_id != "")
 }
 
 $smarty = new TLSmarty();
+if($g_bugInterface)
+{
+	$g_bugInterface->init_pid_from_execute($db, $args->exec_id);
+}
 $smarty->assign('bugIDMaxLength',$g_bugInterface->getBugIDMaxLength());
 $smarty->assign('bts_url', $g_bugInterface->getEnterBugURL());
 $smarty->assign('msg',$msg);
@@ -91,4 +95,4 @@ function checkRights(&$db,&$user)
 	}
 	return $hasRights;
 }
-?>
\ No newline at end of file
+?>
diff --git a/lib/functions/testproject.class.php b/lib/functions/testproject.class.php
index e007736..3597525 100644
--- a/lib/functions/testproject.class.php
+++ b/lib/functions/testproject.class.php
@@ -129,21 +129,24 @@ class testproject extends tlObjectWithAttachments
  * @TODO havlatm: described return parameter differs from reality
  * @TODO havlatm: parameter $options should be 
  */
-function create($name,$color,$options,$notes,$active=1,$tcasePrefix='',$is_public=1)
+function create($name,$color,$options,$notes,$active=1,$tcasePrefix='',$is_public=1,$btsProjectId='')
 {
 	// Create Node and get the id
 	$root_node_id = $this->tree_manager->new_root_node($name);
 	$tcprefix = $this->formatTcPrefix($tcasePrefix);
+	if(is_null($btsProjectId))
+		$btsProjectId = "";
 	$serOptions = serialize($options);
 
 	$sql = " INSERT INTO {$this->object_table} (id,color," .
-	       " options,notes,active,is_public,prefix) " .
+	       " options,notes,active,is_public,prefix,bts_project_id) " .
 	       " VALUES (" . $root_node_id . ", '" .
 	                     $this->db->prepare_string($color) . "','" .
 	                     $serOptions . "','" .
 		                 $this->db->prepare_string($notes) . "'," .
 		                 $active . "," . $is_public . ",'" .
-		                 $this->db->prepare_string($tcprefix) . "')";
+		                 $this->db->prepare_string($tcprefix) . "','" .
+		                 $this->db->prepare_string($btsProjectId) . "')";
 	$result = $this->db->exec_query($sql);
 
 	if ($result)
@@ -184,7 +187,7 @@ function create($name,$color,$options,$notes,$active=1,$tcasePrefix='',$is_publi
  *
  **/
 function projectUpdate($id, $name, $color, $notes,$options,$active=null,
-						$tcasePrefix=null,$is_public=null)
+						$tcasePrefix=null,$is_public=null,$btsProjectId=null)
 {
     $status_ok=1;
 	$status_msg = 'ok';
@@ -209,6 +212,11 @@ function projectUpdate($id, $name, $color, $notes,$options,$active=null,
 	}
 	$serOptions = serialize($options);
 
+	if( !is_null($btsProjectId) )
+	{
+	    $add_upd .=",bts_project_id='" . $this->db->prepare_string($btsProjectId) . "'" ;
+	}
+
 	$sql = " UPDATE {$this->object_table} SET color='" . $this->db->prepare_string($color) . "', ".
 			" options='" .  $serOptions . "', " .
 			" notes='" . $this->db->prepare_string($notes) . "' {$add_upd} " .
@@ -2403,4 +2411,4 @@ private function copy_requirements($source_id,$target_id,$user_id)
 }
 
 } // end class
-?>
\ No newline at end of file
+?>
diff --git a/lib/project/projectEdit.php b/lib/project/projectEdit.php
index 96daf3c..12c7a5d 100644
--- a/lib/project/projectEdit.php
+++ b/lib/project/projectEdit.php
@@ -28,11 +28,17 @@ require_once('common.php');
 require_once("web_editor.php");
 $editorCfg = getWebEditorCfg('testproject');
 require_once(require_web_editor($editorCfg['type']));
+if (config_get('interface_bugs') != 'NO')
+{
+    require_once(TL_ABS_PATH. 'lib' . DIRECTORY_SEPARATOR . 'bugtracking' .
+                   DIRECTORY_SEPARATOR . 'int_bugtracking.php');
+}
 
 testlinkInitPage($db,true,false,"checkRights");
 
 $gui_cfg = config_get('gui');
 $templateCfg = templateConfiguration();
+$bts_project_name_wanted = $g_bugInterface ? $g_bugInterface->project_name_wanted(): false;
 
 $session_tproject_id = isset($_SESSION['testprojectID']) ? $_SESSION['testprojectID'] : 0;
 $template = null;
@@ -102,6 +108,7 @@ $smarty = new TLSmarty();
 $smarty->assign('gui_cfg',$gui_cfg);
 $smarty->assign('editorType',$editorCfg['type']);
 $smarty->assign('mgt_view_events',$_SESSION['currentUser']->hasRight($db,"mgt_view_events"));
+$smarty->assign('bts_project_name_wanted', $bts_project_name_wanted);
 
 
 if(!$status_ok)
@@ -142,6 +149,8 @@ switch($args->doAction)
         $smarty->assign('notes', $of->CreateHTML());
         $smarty->assign('user_feedback', $user_feedback);
         $smarty->assign('feedback_type', 'ultrasoft');
+        if($bts_project_name_wanted)
+            $smarty->assign('btsProjectId', $args->btsProjectId);
         $smarty->display($templateCfg->template_dir . $template);
     break;
 
@@ -165,7 +174,7 @@ function init_args($tprojectMgr,$request_hash, $session_tproject_id)
 {
     $args = new stdClass();
 	$request_hash = strings_stripSlashes($request_hash);
-	$nullable_keys = array('tprojectName','color','notes','doAction','tcasePrefix');
+	$nullable_keys = array('tprojectName','color','notes','doAction','tcasePrefix','btsProjectId');
 	foreach ($nullable_keys as $value)
 	{
 		$args->$value = isset($request_hash[$value]) ? trim($request_hash[$value]) : null;
@@ -252,7 +261,7 @@ function doCreate($argsObj,&$tprojectMgr)
 	  	    
 		$new_id = $tprojectMgr->create($argsObj->tprojectName, $argsObj->color,
 					$options, $argsObj->notes, $argsObj->active, $argsObj->tcasePrefix,
-					$argsObj->is_public);
+					$argsObj->is_public,$argsObj->btsProjectId);
 									                 
 		if (!$new_id)
 		{
@@ -322,7 +331,7 @@ function doUpdate($argsObj,&$tprojectMgr,$sessionTprojectID)
 	  	$options = prepareOptions($argsObj);
         if( $tprojectMgr->projectUpdate($argsObj->tprojectID,trim($argsObj->tprojectName),
         			$argsObj->color, $argsObj->notes, $options, $argsObj->active,
-        			$argsObj->tcasePrefix, $argsObj->is_public) )
+        			$argsObj->tcasePrefix, $argsObj->is_public, $argsObj->btsProjectId) )
         {
         	$op->msg = '';
         	$tprojectMgr->activateTestProject($argsObj->tprojectID,$argsObj->active);
@@ -363,6 +372,8 @@ function doUpdate($argsObj,&$tprojectMgr,$sessionTprojectID)
 */
 function edit(&$argsObj,&$tprojectMgr)
 {
+	global $bts_project_name_wanted;
+
 	$tprojectInfo = $tprojectMgr->get_by_id($argsObj->tprojectID);
    
 	$argsObj->tprojectName = $tprojectInfo['name'];
@@ -372,6 +383,10 @@ function edit(&$argsObj,&$tprojectMgr)
 	$argsObj->active = $tprojectInfo['active'];
 	$argsObj->tcasePrefix = $tprojectInfo['prefix'];
 	$argsObj->is_public = $tprojectInfo['is_public'];
+	if($bts_project_name_wanted)
+		$argsObj->btsProjectId = $tprojectInfo['bts_project_id'];
+	else
+		$argsObj->btsProjectId = NULL;
 
 
 	$ui = new stdClass();
@@ -492,4 +507,4 @@ function checkRights(&$db,&$user)
 {
 	return $user->hasRight($db,'mgt_modify_product');
 }
-?>
\ No newline at end of file
+?>
diff --git a/lib/project/projectView.php b/lib/project/projectView.php
index fbc2937..bde967f 100644
--- a/lib/project/projectView.php
+++ b/lib/project/projectView.php
@@ -16,6 +16,11 @@
 
 require_once('../../config.inc.php');
 require_once("common.php");
+if (config_get('interface_bugs') != 'NO')
+{
+    require_once(TL_ABS_PATH. 'lib' . DIRECTORY_SEPARATOR . 'bugtracking' .
+                   DIRECTORY_SEPARATOR . 'int_bugtracking.php');
+}
 testlinkInitPage($db,false,false,"checkRights");
 
 $templateCfg = templateConfiguration();
@@ -35,8 +40,10 @@ if(count($gui->tprojects) == 0)
     $template2launch = "projectEdit.tpl"; 
     $gui->doAction = "create";
 }
+$bts_project_name_wanted = $g_bugInterface ? $g_bugInterface->project_name_wanted(): false;
 $smarty = new TLSmarty();
 $smarty->assign('gui',$gui);
+$smarty->assign('bts_project_name_wanted', $bts_project_name_wanted);
 $smarty->display($templateCfg->template_dir . $template2launch);
 
 
@@ -60,4 +67,4 @@ function checkRights(&$db,&$user)
 {
 	return $user->hasRight($db,'mgt_modify_product');
 }
-?>
\ No newline at end of file
+?>
-- 
tg: (5744030..) t/bugtrac_integration (depends on: t/typos_no_last_eol)
