From: Jiang <jiangxin@ossxp.com>
Subject: [PATCH] t/ldap_account_sync

从 LDAP 中同步用户帐号。

Signed-off-by: Jiang <jiangxin@ossxp.com>

---
 gui/templates/usermanagement/ldapSync.tpl  |   97 +++++++++++++++
 gui/templates/usermanagement/tabsmenu.tpl  |    8 +-
 gui/templates/usermanagement/usersView.tpl |   11 ++-
 lib/functions/ldap_api.php                 |   58 +++++++++
 lib/usermanagement/ldapSync.php            |  180 ++++++++++++++++++++++++++++
 lib/usermanagement/usersView.php           |    9 ++
 6 files changed, 359 insertions(+), 4 deletions(-)

diff --git a/gui/templates/usermanagement/ldapSync.tpl b/gui/templates/usermanagement/ldapSync.tpl
new file mode 100644
index 0000000..6cf1a93
--- /dev/null
+++ b/gui/templates/usermanagement/ldapSync.tpl
@@ -0,0 +1,97 @@
+{*
+Testlink Open Source Project - http://testlink.sourceforge.net/
+
+Purpose: smarty template - sync users from ldap
+
+20100719 - jiangxin - initialized.
+*}
+{include file="inc_head.tpl" openHead="yes"}
+
+{literal}
+<script type="text/javascript">
+function toggleAllSelection(el) {
+  var boxes = el.getElementsBySelector('input[type=checkbox]');
+  var all_checked = true;
+  for (i = 0; i < boxes.length; i++) { if (boxes[i].checked == false) { all_checked = false; } }
+  for (i = 0; i < boxes.length; i++) {
+    if (all_checked) {
+      boxes[i].checked = false;
+    } else if (boxes[i].checked == false) {
+      boxes[i].checked = true;
+    }
+  }
+}
+</script>
+{/literal}
+
+</head>
+
+
+{lang_get var="labels"
+          s="title_user_mgmt,th_login,th_first_name,th_last_name,th_email,no_permissions_for_action,
+             menu_ldap_sync_users,btn_ldap_sync_users,btn_apply_filter,th_toggle_all"}
+
+<body>
+
+{if $grants->user_mgmt == "yes"}
+
+	<h1 class="title">{$labels.title_user_mgmt} - {$labels.menu_ldap_sync_users}</h1>
+	{***** TABS *****}
+  {include file="usermanagement/tabsmenu.tpl"}
+
+	{***** existing users form *****}
+	<div class="workBack">
+		<form method="post" action="lib/usermanagement/ldapSync.php" name="ldapsync" id="ldapsync">
+    <input type="hidden" name="show" value="{$show|escape}">
+	  {include file="inc_update.tpl" result=$result item="user" action="$action" user_feedback=$user_feedback}
+		<div>
+			<input name="doFilterApply" id="ldap_filter_apply" type="submit" value="{$labels.btn_apply_filter}:">
+			<input name="ldap_filter" id="ldap_filter" type="text" size="50" value="{$ldap_filter}">
+		</div>
+    <br>
+		<input name="doLdapSync" id="do_ldap_sync" type="submit" value="{$labels.btn_ldap_sync_users}">
+		<table class="simple" width="95%">
+			<tr>
+				<th style="width:3em;"><a href="#" onclick="toggleAllSelection(Element.up(this, &quot;form&quot;)); return false;" title="{$labels.th_toggle_all}">{$labels.th_toggle_all}</a></th>
+				<th>{$labels.th_login}</th>
+				<th>{$labels.th_first_name}</th>
+				<th>{$labels.th_last_name}</th>
+				<th>{$labels.th_email}</th>
+			</tr>
+
+      {foreach from=$users key=uid item=user}
+				<tr>
+				<td align="center"><input type="checkbox" name="ids[]" value="{$uid|escape}"></td>
+				<td>{$uid|escape}</td>
+				<td>{$user.firstName|escape}</td>
+				<td>{$user.lastName|escape}</td>
+				<td>{$user.emailAddress|escape}</td>
+			</tr>
+			{/foreach}
+		</table>
+    <div>{$summary}</div>
+		<input name="doLdapSync" id="do_ldap_sync" type="submit" value="{$labels.btn_ldap_sync_users}">
+		</form>
+	</div>
+
+	{*  BUGID 0000103: Localization is changed but not strings *}
+	{if $update_title_bar == 1}
+	{literal}
+	<script type="text/javascript">
+		parent.titlebar.location.reload();
+	</script>
+	{/literal}
+	{/if}
+	{if $reload == 1}
+	{literal}
+	<script type="text/javascript">
+		top.location.reload();
+	</script>
+	{/literal}
+	{/if}
+{else}
+	{$labels.no_permissions_for_action}<br />
+	<a href="{$base_href}" alt="Home">Home</a>
+{/if}
+</body>
+</html>
diff --git a/gui/templates/usermanagement/tabsmenu.tpl b/gui/templates/usermanagement/tabsmenu.tpl
index 05a60bf..d58f2f1 100644
--- a/gui/templates/usermanagement/tabsmenu.tpl
+++ b/gui/templates/usermanagement/tabsmenu.tpl
@@ -22,7 +22,7 @@ include to generate menu when managing users and roles
 
 {lang_get var="tabsMenuLabels"
           s="menu_new_user,menu_view_users,menu_edit_user,menu_define_roles,
-             menu_edit_role,menu_view_roles,menu_assign_testproject_roles,menu_assign_testplan_roles"}
+             menu_edit_role,menu_view_roles,menu_assign_testproject_roles,menu_assign_testplan_roles,menu_ldap_sync_users"}
 
 <div class="tabMenu">
 {if $grants->user_mgmt == "yes"}
@@ -31,6 +31,10 @@ include to generate menu when managing users and roles
 	{else}
 	   {if $highlight->create_user}
 	       <span class="selected">{$tabsMenuLabels.menu_new_user}</span>
+	   {else}
+	      {if $highlight->ldap_sync_users}
+	          <span class="selected">{$tabsMenuLabels.menu_ldap_sync_users}</span>
+	      {/if}
 	   {/if}
 	{/if}
 
@@ -79,4 +83,4 @@ include to generate menu when managing users and roles
 	{/if}
 	{$tabsMenuLabels.menu_assign_testplan_roles}{$closure}</span>
 {/if}
-</div>
\ No newline at end of file
+</div>
diff --git a/gui/templates/usermanagement/usersView.tpl b/gui/templates/usermanagement/usersView.tpl
index ce486e8..d5ceea1 100644
--- a/gui/templates/usermanagement/usersView.tpl
+++ b/gui/templates/usermanagement/usersView.tpl
@@ -14,6 +14,7 @@ Purpose: smarty template - users overview
 {assign var="userActionMgr" value="lib/usermanagement/usersEdit.php"}
 {assign var="createUserAction" value="$userActionMgr?doAction=create"}
 {assign var="editUserAction" value="$userActionMgr?doAction=edit&amp;user_id="}
+{assign var="ldapSyncAction" value="lib/usermanagement/ldapSync.php"}
 
 {lang_get s='warning_disable_user' var="warning_msg"}
 {lang_get s='disable' var="del_msgbox_title"}
@@ -62,7 +63,8 @@ function toggleRowByClass(oid,className,displayValue)
           s="title_user_mgmt,th_login,title_user_mgmt,th_login,th_first_name,th_last_name,th_email,
              th_role,order_by_role_descr,order_by_role_dir,th_locale,th_active,th_api,th_delete,
              disable,alt_edit_user,Yes,No,alt_delete_user,no_permissions_for_action,btn_create,
-             show_inactive_users,hide_inactive_users,alt_disable_user,order_by_login,order_by_login_dir,alt_active_user"}
+             show_inactive_users,hide_inactive_users,alt_disable_user,order_by_login,order_by_login_dir,alt_active_user,
+             menu_ldap_sync_users,ldap_sync_users_desc"}
 
 <body {$body_onload}>
 
@@ -163,7 +165,12 @@ function toggleRowByClass(oid,className,displayValue)
 
 	<div class="groupBtn">
 	<form method="post" action="{$createUserAction}" name="launch_create">
+	{if $ldap_user_sync_capability}
+	<input type="button" name="doSync"  value="{$labels.menu_ldap_sync_users}" onClick="javascript:location.href='{$ldapSyncAction}';return false;" />
+	<a href="{$ldapSyncAction}">{$labels.ldap_sync_users_desc}</a>
+  {else}
 	<input type="submit" name="doCreate"  value="{$labels.btn_create}" />
+	{/if}
   </form>
 	</div>
 
@@ -187,4 +194,4 @@ function toggleRowByClass(oid,className,displayValue)
 	<a href="{$base_href}" alt="Home">Home</a>
 {/if}
 </body>
-</html>
\ No newline at end of file
+</html>
diff --git a/lib/functions/ldap_api.php b/lib/functions/ldap_api.php
index 7a4a75d..62e582a 100644
--- a/lib/functions/ldap_api.php
+++ b/lib/functions/ldap_api.php
@@ -141,6 +141,64 @@
 	}
 
 // ----------------------------------------------------------------------------
+	// Read all users from the LDAP directory
+	function ldap_fetch_all_accounts( $ldap_filter="", $max=0 ) 
+	{
+		$users = array();
+
+		$authCfg 			= config_get('authentication');
+		$t_ldap_organization = $authCfg['ldap_organization'];
+		$t_ldap_root_dn		= $authCfg['ldap_root_dn'];
+		$t_ldap_uid_field	= strtolower( $authCfg['ldap_uid_field'] );	// 'uid' by default
+		$t_ldap_firstname_field = strtolower( $authCfg['ldap_firstname_field'] );	// 'givenName' by default
+		$t_ldap_lastname_field  = strtolower( $authCfg['ldap_lastname_field'] );	// 'sn' by default
+		$t_ldap_fullname_field  = strtolower( $authCfg['ldap_fullname_field'] );	// 'cn' by default
+		$t_ldap_email_field     = strtolower( $authCfg['ldap_email_field'] );	// 'mail' by default
+
+    if (empty($ldap_filter))
+		    $t_search_filter 	= $t_ldap_organization ? $t_ldap_organization : "(&(uid=*)(mail=*))";
+    else if ($ldap_filter[0] == "(")
+		    $t_search_filter 	= "(&${t_ldap_organization}$ldap_filter)";
+    else
+		    $t_search_filter 	= "(&$t_ldap_organization($ldap_filter))";
+		$t_search_attrs  	= array( 'dn',
+                  'uid',
+									$t_ldap_firstname_field,
+									$t_ldap_lastname_field,
+									$t_ldap_fullname_field,
+									$t_ldap_email_field );
+		$t_connect          = ldap_connect_bind();
+
+		if( !is_null($t_connect->handler) )
+		{
+			$t_ds = $t_connect->handler;
+
+			# Search for the user id
+			$t_sr = ldap_search( $t_ds, $t_ldap_root_dn, $t_search_filter, $t_search_attrs );
+			$t_info = ldap_get_entries( $t_ds, $t_sr );
+
+			if ( $t_info ) {
+        $max = $max <= $t_info['count'] && $max > 0 ? $max : $t_info['count'];
+        for ($i = 0; $i < $max; $i++) {
+            $uid = $t_info[$i]['uid'][0];
+            $sn = $t_info[$i][$t_ldap_lastname_field][0];
+            $givenname = $t_info[$i][$t_ldap_firstname_field][0];
+            $mail = $t_info[$i][$t_ldap_email_field][0];
+            $users[$uid] = array();
+            $users[$uid]['lastName'] = $sn;
+            $users[$uid]['firstName'] = $givenname;
+            $users[$uid]['emailAddress'] = $mail;
+        }
+			}
+
+			ldap_free_result( $t_sr );
+			ldap_unbind( $t_ds );
+		}
+
+		return $users;
+	}
+
+// ----------------------------------------------------------------------------
 	// Read user attributes from the LDAP directory
 	function ldap_fetch_account( $login_name ) 
 	{
diff --git a/lib/usermanagement/ldapSync.php b/lib/usermanagement/ldapSync.php
new file mode 100644
index 0000000..59c660b
--- /dev/null
+++ b/lib/usermanagement/ldapSync.php
@@ -0,0 +1,180 @@
+<?php
+/**
+ * TestLink Open Source Project - http://testlink.sourceforge.net/
+ * This script is distributed under the GNU General Public License 2 or later. 
+ *
+ * Sync user accounts with LDAP
+ *
+ * Author		Jiang Xin
+ * Copyright 	2010, http://www.ossxp.com/
+ *
+ * @internal Revisions:
+ *  20100718 - jiangxin - initialized
+ *                          
+ */
+require_once("../../config.inc.php");
+require_once("users.inc.php");
+testlinkInitPage($db,false,false,"checkRights");
+
+$templateCfg = templateConfiguration();
+$args = init_args();
+$grants = getGrantsForUserMgmt($db,$args->currentUser);
+
+// Fetch all ldap users as an array.
+$ldap_users = get_ldap_users($args->ldap_filter);
+
+$sqlResult = null;
+$user_feedback = '';
+
+// User click doLdapSync button.
+if ( $args->doLdapSync && ! empty($args->ids) )
+{
+	$count_success = 0;
+	$count_failed = 0;
+	foreach ($args->ids as $uid) {
+		$user = new tlUser();
+		$user->login = $uid;
+		$login_exists = ($user->readFromDB($db,tlUser::USER_O_SEARCH_BYLOGIN) >= tl::OK);
+		if (!$login_exists && isset($ldap_users[$uid]))
+		{
+			$user->firstName    = $ldap_users[$uid]["firstName"];
+			$user->lastName     = $ldap_users[$uid]["lastName"];
+			$user->emailAddress = $ldap_users[$uid]["emailAddress"];
+			$user->globalRoleID = config_get('default_roleid');
+			$user->locale = config_get('default_language');
+			$user->isActive = 1;
+			$login_exists = 1;
+		}
+		else {
+			$count_failed++;
+			continue;
+		}
+		$status = $user->writeToDB($db);
+		if($status < tl::OK) {
+			$count_failed++;
+		} else {
+			$count_success++;
+		}
+	}
+	$user_feedback = sprintf( lang_get('ldap_sync_result'), $count_success, $count_failed );
+}
+
+// Get all testlink users include new sync users from ldap.
+$tl_users = get_tl_users();
+
+// Users still in LDAP, but not in testlink.
+$ldap_new_users = get_new_ldap_users( $tl_users, $ldap_users);
+
+$count_total = count($ldap_new_users);
+$count_show = $args->show && $args->show < $count_total ? $args->show : $count_total;
+$ldap_new_users = array_slice( $ldap_new_users, 0, $count_show );
+$summary = sprintf( lang_get(ldap_user_summary), $count_show, $count_total,
+			"<a href='" . $_SERVER['PHP_SELF'] . "?show=20&ldap_filter="  . urlencode($args->ldap_filter) . "'>20</a>, ".
+			"<a href='" . $_SERVER['PHP_SELF'] . "?show=50&ldap_filter="  . urlencode($args->ldap_filter) . "'>50</a>, ".
+			"<a href='" . $_SERVER['PHP_SELF'] . "?show=100&ldap_filter=" . urlencode($args->ldap_filter) . "'>100</a>"
+			);
+
+$highlight = initialize_tabsmenu();
+$highlight->ldap_sync_users = 1;
+
+$smarty = new TLSmarty();
+$smarty->assign('highlight',$highlight);
+$smarty->assign('users',$ldap_new_users);
+$smarty->assign('ldap_filter',$args->ldap_filter);
+$smarty->assign('user_feedback',$user_feedback);
+$smarty->assign('result',$sqlResult);
+$smarty->assign('grants',$grants);
+$smarty->assign('show',$args->show);
+$smarty->assign('ldap_user_sync_capability',ldap_user_sync_capability());
+$smarty->assign('summary', $summary);
+
+$smarty->display($templateCfg->template_dir . $templateCfg->default_template);
+
+
+function get_ldap_users( $filter="", $max=0 )
+{
+	return ldap_fetch_all_accounts($filter, $max);
+}
+
+function get_tl_users()
+{
+	global $db;
+	$users = array();
+	foreach ( getAllUsersRoles($db) as $user )
+	{
+		$users[$user->login] = array( 'lastName'	=>	$user->lastName,
+									  'firstName'	=>	$user->firstName,
+									  'emailAddress'=>	$user->emailAddress);
+
+	}
+	return $users;
+}
+
+function get_new_ldap_users( &$tl_users, &$ldap_users, $max=0 )
+{
+	if (! $tl_users)
+		$tl_users = get_tl_users();
+	if (! $ldap_users)
+		$ldap_users = get_ldap_users();
+
+	$users = array_diff_key($ldap_users, $tl_users);
+
+	if ($max != 0)
+		return array_slice($users, 0, $max);
+	else
+		return $users;
+}
+
+/*
+  function: init_args()
+            get info from request and session
+
+  args:
+
+  returns: object
+
+*/
+function init_args()
+{
+	// input from GET['HelloString3'], 
+	// type: string,  
+	// minLen: 1, 
+	// maxLen: 15,
+	// regular expression: null
+	// checkFunction: applys checks via checkFooOrBar() to ensure its either 'foo' or 'bar' 
+	// normalization: done via  normFunction() which replaces ',' with '.' 
+	// "HelloString3" => array("GET",tlInputParameter::STRING_N,1,15,'checkFooOrBar','normFunction'),
+	$iParams = array("ldap_filter" => array(tlInputParameter::STRING_N,0,90),
+			         "ids" => array(tlInputParameter::ARRAY_STRING_N),
+			         "show" => array(tlInputParameter::STRING_N),
+			         "doLdapSync" => array(tlInputParameter::STRING_N),
+			         "doFilterApply" => array(tlInputParameter::STRING_N));
+
+	$pParams = R_PARAMS($iParams);
+
+	$args = new stdClass();
+	$args->ldap_filter = isset($pParams["ldap_filter"]) ? $pParams["ldap_filter"] : "&(uid=*)(mail=*)(!(objectClass=gosaUserTemplate))";
+    $args->ids = $pParams["ids"];
+    $args->doLdapSync = empty($pParams["doLdapSync"]) ? false : true;
+    $args->doFilterApply = empty($pParams["doFilterApply"]) ? false : true;
+    $args->show = isset($pParams["show"]) ? $pParams["show"] : 20;
+    $args->currentUser = $_SESSION['currentUser'];
+    $args->currentUserID = $_SESSION['currentUser']->dbID;
+    $args->basehref =  $_SESSION['basehref'];
+   
+    return $args;
+}
+
+function checkRights(&$db,&$user)
+{
+	return $user->hasRight($db,'mgt_users');
+}
+
+function ldap_user_sync_capability()
+{
+	$authCfg = config_get('authentication');
+	return strtolower($authCfg['method']) != 'md5';
+}
+
+// vim: noet ts=4 sw=4
+?>
diff --git a/lib/usermanagement/usersView.php b/lib/usermanagement/usersView.php
index 1d4f8a8..bcdad62 100644
--- a/lib/usermanagement/usersView.php
+++ b/lib/usermanagement/usersView.php
@@ -128,6 +128,7 @@ $smarty->assign('base_href', $args->basehref);
 $smarty->assign('grants',$grants);
 $smarty->assign('body_onload',$args->body_onload);
 $smarty->assign('checked_hide_inactive_users',$args->checked_hide_inactive_users);
+$smarty->assign('ldap_user_sync_capability',ldap_user_sync_capability());
 
 $smarty->display($templateCfg->template_dir . $templateCfg->default_template);
 
@@ -260,4 +261,12 @@ function checkRights(&$db,&$user)
 {
 	return $user->hasRight($db,'mgt_users');
 }
+
+function ldap_user_sync_capability()
+{
+	$authCfg = config_get('authentication');
+	return strtolower($authCfg['method']) != 'md5';
+}
+
+// vim: noet ts=4 sw=4
 ?>
-- 
tg: (a94ae67..) t/ldap_account_sync (depends on: t/single_signon)
